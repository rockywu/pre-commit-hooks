<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,height=device-height">
  <title><%= name%>扫描趋势变化</title>
  <style>::-webkit-scrollbar{display:none;}</style>
  <style>
    .container {
      width: 1080px;
      margin: 0 auto;
    }
    #mountNode > div {
      padding-top: 20px;
      margin-bottom: 20px;
      border-top: 1px solid #eaeae2;
    }
    .container h3 {
      width: 600px;
      margin: 0 auto;
      text-align:center;
    }
    .proname {
      color: red;
      font-size: 30px;
      padding-right:10px;
    }
    .scanDate {
      text-decoration: none;
      color: #666666;
      position: relative;
      top: 20px;
    }
  </style>
</head>
<body>
<div class="container">
  <h3><span class="proname"><%= name%></span><br />扫描报告</h3>
  <div id="mountNode"></div>
</div>
<script>/*Fixing iframe window.innerHeight 0 issue in Safari*/document.body.clientHeight;</script>
<script src="/static/axios.min.js"></script>
<script src="/static/g2.min.js"></script>
<script src="/static/data-set.min.js"></script>
<script>

  function formatData(data) {
    var source = {
      error : 0,
      warning : 0,
      all : 0
    };
    data.forEach(function(v, k) {
      if(v === null) return;
      var [type, name, cnt] = v.split(":");
      type = type == "^" ? "error" : type;
      var data = {
        item : name,
        type : type,
        count: parseInt(cnt, 10) || 0
      };
      if(typeof source[type] === 'number') {
        source[type] += data.count;
      }
      source.all += data.count;
    });
    return source;
  }
  function dayAndMonthAdd0 (number) {
    return (number < 10) ? '0' + number : number;
  }
  var projectName = '<%= name%>';
  var date = new Date();
  var timeArray = [];
  for (let i = 0; i < 30; i++) {
    let scanDate = date.getFullYear().toString() + dayAndMonthAdd0(date.getMonth() + 1) + dayAndMonthAdd0(date.getDate());
    axios.get("/api/" + projectName + "/" + scanDate + ".json").
    then(function(res) {
      var data = formatData(res.data);
      data.date = scanDate;
      timeArray.push(data);
      drawChat(timeArray);
    });
    date.setDate(date.getDate() - 1);
  }

  const chart = new G2.Chart({
    container: 'mountNode',
    forceFit: true,
    height: window.innerHeight * 0.7,
  });
  function drawChat(data) {
    data.sort((a, b) => {
      return a.date > b.date;
    })
    const ds = new DataSet();
    const dv = ds.createView().source(data);
    dv.transform({
      type: 'fold',
      fields: [ 'error' ],
      key: 'type',
      value: 'problems'
    })
    chart.source(dv, {
      date: {
        range: [ 0, 1 ]
      }
    });
    chart.axis('date', {
      label: {
        htmlTemplate: (text, item, index) => {
          return '<a class="scanDate" href="/report/' + projectName + '/' + text + '">' + text + '</a>'
        }
      }
    });
    chart.tooltip({
      crosshairs: {
        type: 'line'
      }
    });
    chart.line().position('date*problems').color('type');
    chart.point().position('date*problems').color('type').size(4).shape('circle').style({
      stroke: '#fff',
      lineWidth: 1
    });
    chart.render();
  }

</script>
</body>
</html>
